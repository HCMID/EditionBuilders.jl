var documenterSearchIndex = {"docs":
[{"location":"man/internals/#Internals","page":"Internals","title":"Internals","text":"","category":"section"},{"location":"man/internals/","page":"Internals","title":"Internals","text":"EditionBuilders.cleanws(s)\nEditionBuilders.hasattribute(n, attname::AbstractString)","category":"page"},{"location":"man/internals/#EditionBuilders.cleanws-Tuple{Any}","page":"Internals","title":"EditionBuilders.cleanws","text":"Minimize whitespace as allowed by XML syntax.\n\n\n\n\n\n","category":"method"},{"location":"man/internals/#EditionBuilders.hasattribute-Tuple{Any,AbstractString}","page":"Internals","title":"EditionBuilders.hasattribute","text":"True if n has an attribute named a.\n\n\n\n\n\n","category":"method"},{"location":"guide/guide/#User's-guide","page":"User's guide","title":"User's guide","text":"","category":"section"},{"location":"guide/guide/","page":"User's guide","title":"User's guide","text":"EditionBuilder is an abstract type. We'll illustrate how it works with a LiteralTextBuilder that simply extracts all text contents from an XML source.","category":"page"},{"location":"guide/guide/#An-example:-LiteralTextBuilder","page":"User's guide","title":"An example: LiteralTextBuilder","text":"","category":"section"},{"location":"guide/guide/","page":"User's guide","title":"User's guide","text":"using EditionBuilders\nbuilder = LiteralTextBuilder(\"Literal text builder\", \"raw\")\nbuilder\n\n# output\n\nLiteralTextBuilder(\"Literal text builder\", \"raw\")","category":"page"},{"location":"guide/guide/#Exported-function:-edited_passage","page":"User's guide","title":"Exported function: edited_passage","text":"","category":"section"},{"location":"guide/guide/","page":"User's guide","title":"User's guide","text":"Subtypes of EditionBuilder should implement tjhe exported function edited_passage.","category":"page"},{"location":"guide/guide/","page":"User's guide","title":"User's guide","text":"Let's create a CitablePassage to work from:","category":"page"},{"location":"guide/guide/","page":"User's guide","title":"User's guide","text":"using CitableText\nusing CitableCorpus\nurn = CtsUrn(\"urn:cts:trmilli:tl.106.v1:1\")\nxml = \"\"\"<ab n=\"1\"><w>ebe<choice><sic>M</sic><corr>h</corr></choice>i</w> xopa : mei ti siyEni : <persName><w>sbiKaza</w></persName> Θortta : miNtehi : pddEneh : Mmi :</ab>\"\"\"\ncn = CitablePassage(urn, xml)\ncn.urn\n\n# output\n\nurn:cts:trmilli:tl.106.v1:1","category":"page"},{"location":"guide/guide/","page":"User's guide","title":"User's guide","text":"We use edited_passage to apply our builder to a single CitablePassage. This creates a new CitablePassage.  The URN of the new passage is the same except that the version identifier is now the one we specified for our builder.  The text content is the literal text that our builder extracted from the XML source.","category":"page"},{"location":"guide/guide/","page":"User's guide","title":"User's guide","text":"edited = edited_passage(builder, cn)\nedited\n\n# output\n\n<urn:cts:trmilli:tl.106.raw:1> ebeMhi xopa : mei ti siyEni : sbiKaza Θortta : miNtehi : pddEneh : Mmi :","category":"page"},{"location":"guide/guide/#Creating-an-edition","page":"User's guide","title":"Creating an edition","text":"","category":"section"},{"location":"guide/guide/","page":"User's guide","title":"User's guide","text":"The edition function can simply apply edited_passage to each passage of a CitableTextCorpus to create a new citable corpus.","category":"page"},{"location":"guide/guide/","page":"User's guide","title":"User's guide","text":"Let's first make a (very short) corpus containing our previous citable passage.","category":"page"},{"location":"guide/guide/","page":"User's guide","title":"User's guide","text":"corpus = CitableTextCorpus([cn])\ntypeof(corpus)\n\n# output\n\nCitableTextCorpus","category":"page"},{"location":"guide/guide/","page":"User's guide","title":"User's guide","text":"Here's the new, univocal edition we wanted.","category":"page"},{"location":"guide/guide/","page":"User's guide","title":"User's guide","text":"univocal = edition(builder, corpus)\nunivocal\n\n# output\n\nCorpus with 1 citable passages in 1 documents.","category":"page"},{"location":"#EditionBuilders","page":"Home","title":"EditionBuilders","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = EditionBuilders","category":"page"},{"location":"","page":"Home","title":"Home","text":"Build univocal editions from multivalent source documents.","category":"page"},{"location":"#What-it-does","page":"Home","title":"What it does","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Scholarly editing projects often encode texts in complex documents (typically using XML) that record multiple possible readings.  Possible readings might include corrections, additions or alterations by the author or a later reader, or editorial intervention by modern editor to expand abbreviations, normalize the text, or otherwise explain the text to a modern reader.","category":"page"},{"location":"","page":"Home","title":"Home","text":"To analyze or read a text computationally, however, we need to extract one or more univocal editions from a source document: that is, a single reading of the text.  It might be a purely dipomatic reading, the reading of a later hand in a manuscript, or an editorially normalized reading, for example.  It could even be a reading optimized for computational processing such as a lemmatized text or a text omitting \"stop words\".","category":"page"},{"location":"","page":"Home","title":"Home","text":"The EditionBuilders package defines a standard interface for extracting univocal texts from source documents.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Pages = [\"guide/guide.md\",\n    \"man/index.md\",\n    \"man/internals.md\"\n]\nDepth = 3","category":"page"},{"location":"man/#API-documentation","page":"API documentation","title":"API documentation","text":"","category":"section"},{"location":"man/#Functions","page":"API documentation","title":"Functions","text":"","category":"section"},{"location":"man/","page":"API documentation","title":"API documentation","text":"edited_passage(builder::LiteralTextBuilder, CitablePassage::CitablePassage)","category":"page"},{"location":"man/#EditionBuilders.edited_passage-Tuple{LiteralTextBuilder,CitablePassage}","page":"API documentation","title":"EditionBuilders.edited_passage","text":"Generic edition builder mindlessly extracting all text content from XML passage.\n\n\n\n\n\n","category":"method"},{"location":"man/#Types","page":"API documentation","title":"Types","text":"","category":"section"},{"location":"man/","page":"API documentation","title":"API documentation","text":"EditionBuilder\nLiteralTextBuilder","category":"page"},{"location":"man/#EditionBuilders.EditionBuilder","page":"API documentation","title":"EditionBuilders.EditionBuilder","text":"An abstract type for orthographic systems.\n\n\n\n\n\n","category":"type"},{"location":"man/#EditionBuilders.LiteralTextBuilder","page":"API documentation","title":"EditionBuilders.LiteralTextBuilder","text":"Builder for reading raw text from XML edition.\n\n\n\n\n\n","category":"type"},{"location":"man/#Index","page":"API documentation","title":"Index","text":"","category":"section"},{"location":"man/","page":"API documentation","title":"API documentation","text":"","category":"page"}]
}
